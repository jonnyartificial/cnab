// <auto-generated />
using System;
using Cnab.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cnab.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251020225725_Idempotence")]
    partial class Idempotence
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cnab.Domain.Entities.AccountTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Card")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2(0)");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("StoreOwner")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<int>("TransactionTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.HasIndex("TransactionTypeId", "StoreId", "Date", "Value", "Cpf", "Card")
                        .IsUnique();

                    b.ToTable("AccountTransactions");
                });

            modelBuilder.Entity("Cnab.Domain.Entities.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(19)
                        .HasColumnType("nvarchar(19)");

                    b.HasKey("Id");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("Cnab.Domain.Entities.TransactionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsIncome")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TransactionTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Debit",
                            IsIncome = true
                        },
                        new
                        {
                            Id = 2,
                            Description = "Boleto",
                            IsIncome = false
                        },
                        new
                        {
                            Id = 3,
                            Description = "Financing",
                            IsIncome = false
                        },
                        new
                        {
                            Id = 4,
                            Description = "Credit",
                            IsIncome = true
                        },
                        new
                        {
                            Id = 5,
                            Description = "Loan Receipt",
                            IsIncome = true
                        },
                        new
                        {
                            Id = 6,
                            Description = "Sales",
                            IsIncome = true
                        },
                        new
                        {
                            Id = 7,
                            Description = "TED Receipt",
                            IsIncome = true
                        },
                        new
                        {
                            Id = 8,
                            Description = "DOC Receipt",
                            IsIncome = true
                        },
                        new
                        {
                            Id = 9,
                            Description = "Rent",
                            IsIncome = false
                        });
                });

            modelBuilder.Entity("Cnab.Domain.Entities.AccountTransaction", b =>
                {
                    b.HasOne("Cnab.Domain.Entities.Store", "Store")
                        .WithMany("AccountTransactions")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Cnab.Domain.Entities.TransactionType", "TransactionType")
                        .WithMany("AccountTransactions")
                        .HasForeignKey("TransactionTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Store");

                    b.Navigation("TransactionType");
                });

            modelBuilder.Entity("Cnab.Domain.Entities.Store", b =>
                {
                    b.Navigation("AccountTransactions");
                });

            modelBuilder.Entity("Cnab.Domain.Entities.TransactionType", b =>
                {
                    b.Navigation("AccountTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
